angular.$createBundle=function(bundle,namespaces){return angular.forEach(namespaces,function(name){angular.module(name,[])}),angular.module(bundle,namespaces)},angular.$createBundle("sdk",["sdk.directives","sdk.filters","sdk.services","sdk.services.configuration","sdk.services.rest","sdk.services.storage"]).run(function($Configuration,$LocalStorage,$log,GLOBAL_CONFIGURATION){$log.debug("debugging enabled!");var fullVersion=GLOBAL_CONFIGURATION.version,store_key="$_appInformation",conf=$LocalStorage.getObject(store_key);if(conf){if((conf.version!=fullVersion||conf.environment!=GLOBAL_CONFIGURATION.environment)&&($log.debug("a new configuration version is available, calling [on_build_new_version] if exist's !",GLOBAL_CONFIGURATION.version),angular.isFunction(GLOBAL_CONFIGURATION.on_build_new_version)))try{GLOBAL_CONFIGURATION.on_build_new_version(fullVersion,conf.version),conf.version=fullVersion,conf.environment=GLOBAL_CONFIGURATION.environment,$LocalStorage.setObject(store_key,conf)}catch(e){throw $log.debug("failed to execute [on_build_new_version] function defined in config.js",e),e}}else $LocalStorage.setObject(store_key,{version:fullVersion,environment:GLOBAL_CONFIGURATION.environment,author:GLOBAL_CONFIGURATION.author,application_name:GLOBAL_CONFIGURATION.application_name})}).config(["$logProvider",function($logProvider,$injector){var $injector=angular.injector(["ng","sdk.services.configuration"]),ENVIRONMENT_CONFIGURATION=$injector.get("ENVIRONMENT_CONFIGURATION");$logProvider.debugEnabled(ENVIRONMENT_CONFIGURATION.debugging||!1)}]),angular.element(document).ready(function(){var nmspc_confg="sdk.services.configuration",$injector=angular.injector(["ng",nmspc_confg]),GLOBAL_CONFIGURATION=$injector.get("GLOBAL_CONFIGURATION"),$http=$injector.get("$http"),environment=(GLOBAL_CONFIGURATION.environment+"").toLowerCase();$http.get("config/env/"+environment+".json").success(function(data){angular.module(nmspc_confg).constant("ENVIRONMENT_CONFIGURATION",data);var lang=(GLOBAL_CONFIGURATION.language+"").toLowerCase();$http.get("config/locales/"+lang+".json").success(function(data){angular.module(nmspc_confg).constant("RESOURCES",data),angular.bootstrap(document,["App"])}).error(function(){throw Error("Can't get resources file (config/resources/"+lang+".json)")})}).error(function(){throw Error("Can't get configuration file (config/env/"+environment+".json)")})}),angular.module("sdk.directives").directive("selectTextOnClick",function(){return{restrict:"A",link:function(scope,element){element.on("click",function(){this.select()})}}}),angular.module("sdk.directives").directive("toNumberOnBlur",function($filter){return{require:"ngModel",restrict:"A",link:function(scope,elm,attrs,ctrl){elm.bind("blur",function(){var filter="number";ctrl.$viewValue=$filter(filter)(ctrl.$modelValue),ctrl.$render()}),elm.bind("focus",function(){ctrl.$viewValue=ctrl.$modelValue,ctrl.$render()})}}}),angular.module("sdk.directives",[]).directive("ngRange",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ctrl){var min=parseInt(attrs.min),max=parseInt(attrs.max);ctrl.$validators.range=function(modelValue,viewValue){var value=parseInt(viewValue);return ctrl.$isEmpty(modelValue)?!0:ctrl.$isEmpty(viewValue)?!1:isNaN(min)||isNaN(max)?isNaN(min)?isNaN(max)?!0:max>=value?!0:!1:value>=min?!0:!1:value>=min&&max>=value?!0:!1}}}}),angular.module("sdk.directives",[]).directive("ngRut",function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){var validaRut=function(rutCompleto){var tmp=[];if(rutCompleto.indexOf("-")>0){if(!/^[0-9]+-[0-9kK]{1}$/.test(rutCompleto))return!1;tmp=rutCompleto.split("-")}else{var rut=rutCompleto.replace("-","");tmp.push(rut.substring(0,rut.length-1)),tmp.push(rut.substring(rut.length-1))}return tmp.length<2?!1:dv(tmp[0])==tmp[1].toLowerCase()},dv=function(T){for(var M=0,S=1;T;T=Math.floor(T/10))S=(S+T%10*(9-M++%6))%11;return S?S-1:"k"};ctrl.$validators.rut=function(modelValue,viewValue){return ctrl.$isEmpty(modelValue)?!0:ctrl.$isEmpty(viewValue)?!1:validaRut(viewValue)?!0:!1}}}}),angular.module("sdk.filters").filter("Localize",function($Localization,$log,$interpolate){return function(text,parameters){try{var template=$Localization.get(text);if(parameters){var exp=$interpolate(template);template=exp({parameters:parameters})}return template}catch(e){return text}}}),angular.module("sdk.filters").filter("Template",function($log,$interpolate){return function(template,parameters){var exp=$interpolate(template),content=exp({data:parameters});return content}}),angular.module("sdk.services.configuration").service("$Configuration",function($rootScope,$LocalStorage,GLOBAL_CONFIGURATION,ENVIRONMENT_CONFIGURATION){function get(name,defaultValue){var v=_values[name];if(void 0==typeof v){if(defaultValue)return defaultValue;throw Error(name+" don't exists in configuration")}return _values[name]}function exists(name){return null!=_values[name]}function set(name,value){_values[name]=value}var _values={};for(var name in ENVIRONMENT_CONFIGURATION)set(name,ENVIRONMENT_CONFIGURATION[name]);for(var name in GLOBAL_CONFIGURATION)set(name,GLOBAL_CONFIGURATION[name]);return{get:get,exists:exists}}),angular.module("sdk.services.configuration").service("$Localization",function(RESOURCES){function get(name,defaultValue){var v=RESOURCES[name];if(void 0==typeof v){if(defaultValue)return defaultValue;throw Error(name+" don't exists in resources")}return RESOURCES[name]}function exists(name){return null!=RESOURCES[name]}return{get:get,exists:exists}}),angular.module("sdk.services").service("$Api",function($http,ENVIRONMENT_CONFIGURATION,$log){function get_endpoint(){if(!_endpoint)throw Error("endpoint is not defined , you must define a variable endpoint for use $RestApi service");return _endpoint}function invoke(method,url,body){var cfg={url:get_endpoint()+url,method:method};cfg["GET"==method?"params":"data"]=body,$log.debug("["+method+" "+url+"] parameters: ",body);var http=$http(cfg).success(function(){}).error(function(){});return http}var _endpoint=ENVIRONMENT_CONFIGURATION.endpoint;return{get_endpoint:get_endpoint,invoke:invoke}}),angular.module("sdk.services").factory("$LocalStorage",function($window){return{set:function(key,value){$window.localStorage[key]=value},get:function(key,defaultValue){return $window.localStorage[key]||defaultValue},setObject:function(key,value){$window.localStorage[key]=angular.toJson(value)},getObject:function(key){return JSON.parse($window.localStorage[key]||null)},remove:function(key){$window.localStorage.removeItem(key)},clear:function(){$window.localStorage.clear()},exists:function(){return null!=$window.localStorage[key]}}}),angular.module("sdk.services").factory("$WebSQL",function($q,DB_CONFIG,$log){var self=this;self.db=null;var createSchema=function(){angular.forEach(DB_CONFIG.tables,function(table){var columns=[];angular.forEach(table.columns,function(column){columns.push(column.name+" "+column.type)});var query="CREATE TABLE IF NOT EXISTS "+table.name+" ("+columns.join(",")+")";self.query(query),$log.debug("Table "+table.name+" initialized")})},clearSchema=function(){angular.forEach(DB_CONFIG.tables,function(table){var query="DROP TABLE "+table.name;self.query(query),$log.debug("Table "+table.name+" dropped")})};return self.clearSchema=function(){clearSchema(),createSchema()},self.init=function(){window.sqlitePlugin?self.db=window.sqlitePlugin.openDatabase({name:DB_CONFIG.name}):window.openDatabase&&(self.db=window.openDatabase(DB_CONFIG.name,"1.0","database",41902080)),createSchema()},self.insertAll=function(tableName,data){var columns=[],bindings=[],table=($q.defer(),_.first(_.where(DB_CONFIG.tables,{name:tableName})));for(var columnName in table.columns)columns.push(table.columns[columnName].name),bindings.push("?");for(var sql="INSERT INTO "+tableName+" ("+columns.join(", ")+") VALUES ("+bindings.join(", ")+")",i=0;i<data.length;i++){for(var values=[],j=0;j<columns.length;j++)values.push(data[i][columns[j]]);self.query(sql,values).success(function(){})}},self.insert=function(tableName,data){var columns=[],bindings=[],deferred=$q.defer(),table=_.first(_.where(DB_CONFIG.tables,{name:tableName}));for(var columnName in table.columns)columns.push(table.columns[columnName].name),bindings.push("?");for(var sql="INSERT INTO "+tableName+" ("+columns.join(", ")+") VALUES ("+bindings.join(", ")+")",values=[],j=0;j<columns.length;j++)values.push(data[columns[j]]);return self.db.transaction(function(transaction){transaction.executeSql(sql,values,function(transaction,result){deferred.resolve(result)},function(transaction,error){deferred.reject(error)})}),deferred.promise},self.query=function(query,bindings){bindings="undefined"!=typeof bindings?bindings:[];var deferred=$q.defer();return self.db.transaction(function(transaction){transaction.executeSql(query,bindings,function(transaction,result){deferred.resolve(result)},function(transaction,error){deferred.reject(error)})}),deferred.promise},self.bulkQuery=function(query,values){var deferred=$q.defer(),count=1;return self.db.transaction(function(transaction){angular.forEach(values,function(bindings){var _values=[];for(var pair in bindings)_values.push(bindings[pair]);transaction.executeSql(query,_values,function(){count==values.length&&deferred.resolve(),count++},function(error){deferred.reject(error)})})}),deferred.promise},self.fetchAll=function(result){for(var output=[],i=0;i<result.rows.length;i++)output.push(result.rows.item(i));return output},self.fetch=function(result){return result.rows.item(0)},self});
//# sourceMappingURL=sdk.min.js.map